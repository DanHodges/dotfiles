set nocompatible
filetype off

let iCanHazVundle=1
let vundle_readme=expand('~/.dotfiles/vim/bundle/Vundle.vim/README.md')
if !filereadable(vundle_readme) 
  silent !mkdir -p ~/.dotfiles/vim/bundle/Vundle.vim
  silent !git clone https://github.com/VundleVim/Vundle.vim ~/.dotfiles/vim/bundle/Vundle.vim
  let iCanHazVundle=0
endif

set rtp+=~/.dotfiles/vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'kien/ctrlp.vim'
Plugin 'vim-airline/vim-airline'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/syntastic'
Plugin 'scrooloose/nerdcommenter'
Plugin 'mtscout6/syntastic-local-eslint.vim'
Plugin 'fatih/vim-go'
Plugin 'sbdchd/neoformat'
Plugin 'rust-lang/rust.vim'
call vundle#end()
filetype plugin indent  on
syntax on

" check one time after 4s of inactivity in normal mode
set autoread                                                                                                                                                                                    
au CursorHold * checktime  

let g:jsx_ext_required = 0 " Allow JSX in normal JS files
" disable syntastic on the statusline

"set statusline+=%#warningmsg#
"set statusline+=%{SyntasticStatuslineFlag()}
"set statusline+=%*
"
"
"Prettier integration via Neoformat
autocmd BufWritePre *.js Neoformat
autocmd FileType javascript setlocal formatprg=prettier\ --stdin
" Use formatprg when available
let g:neoformat_run_all_formatters = 1
let g:rustfmt_autosave = 1
let g:rust_clip_command = 'pbcopy'

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_loc_list_height = 5
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 1
let g:syntastic_php_checkers=['php', 'phpcs']
let g:syntastic_php_phpcs_args='--standard=PSR2 -n'
"let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_go_checkers = ['go', 'golint', 'errcheck']

let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_fields = 1
let g:go_highlight_types = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1
let g:go_fmt_command = "goimports"

let g:syntastic_error_symbol = '‚ùå'
let g:syntastic_style_error_symbol = '‚ÅâÔ∏è'
let g:syntastic_warning_symbol = '‚ö†Ô∏è'
let g:syntastic_style_warning_symbol = 'üí©'

highlight link SyntasticErrorSign SignColumn
highlight link SyntasticWarningSign SignColumn
highlight link SyntasticStyleErrorSign SignColumn
highlight link SyntasticStyleWarningSign SignColumn

autocmd BufNewFile,BufRead *.js setlocal nocompatible|set expandtab tabstop=2 shiftwidth=2 autoindent smartindent
autocmd BufNewFile,BufRead *{.c,.php} setlocal tabstop=4 shiftwidth=4 expandtab autoindent smartindent
autocmd BufNewFile,BufRead *.go setlocal noexpandtab tabstop=4 shiftwidth=4 

set t_Co=256
set pastetoggle=<f5>
set wildmode=list:longest,full
set backspace=indent,eol,start
set number
set runtimepath^=~/.dotflies/vim/bundle/ctrlp.vim
set laststatus=2
set directory=$HOME/.dotfiles/vim/swapfiles//


let mapleader = "\<Space>"
nmap <BS> <C-^>
map <Leader>1 :NERDTreeToggle<CR>
map <Leader>s :w<CR>
map <Leader>q :q<CR>
map <Leader>d :q<CR>
map <Leader>x :x<CR>
map <Leader>p :CtrlP<CR>
map <Leader>h :bp<CR>
map <Leader>l :bn<CR>
map <Leader>v :vsp<CR>
map <Leader>h :sp<CR>
map <Leader><Leader> :CtrlP<CR>
noremap <Leader>w <C-w>
noremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>


let g:ctrlp_custom_ignore = {
  \ 'dir': '\v[\/](\.git|node_modules|\.sass-cache|public|bower_components|bui‚Äå‚Äãld)$',
  \ 'file': '\v\.(exe|so|dll)$',
  \ 'link': 'some_bad_symbolic_links',
  \ }

autocmd BufLeave,FocusLost * silent! wall
""Auto src .vimrc on save"
augroup autosourcing
	autocmd!
	autocmd BufWritePost .vimrc source %
augroup END
